/// Each new term in the Fibonacci sequence is generated by adding the previous
/// two terms. By starting with 1 and 2, the first 10 terms will be:
///     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
/// By considering the terms in the Fibonacci sequence whose values do not
/// exceed four million, find the sum of the even-valued terms.

struct Fib(usize, usize);

impl Default for Fib {
    fn default() -> Self {
        Self(1, 1)
    }
}

impl Iterator for Fib {
    type Item = usize;

    fn next(&mut self) -> Option<Self::Item> {
        *self = Fib(self.1, self.0 + self.1);
        Some(self.0)
    }
}

fn main() {
    let mut sum = 0;

    for i in Fib::default()
        .take_while(|x| x < &4000000)
        .filter(|x| x % 2 == 0)
    {
        sum += i;
    }

    println!("{}", sum);
}
